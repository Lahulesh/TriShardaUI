{"version":3,"file":"static/js/236.24598527.chunk.js","mappings":"wKA2IA,QAtIA,WAEE,MA6EKA,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,OAC1BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAEnCK,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAVjB,sCAWZC,QAAQC,IAAI,eAAeJ,EAAST,MACpCC,EAAQQ,EAAST,KACnB,CAAE,MAAOK,GACPC,EAASD,EACX,CAAC,QACCD,GAAW,EACb,GAGFU,EAAW,GACV,IAED,MAAMC,EAnCW,CACb,CAAE,OAAU,EAAG,SAAY,UAC3B,CAAE,OAAU,EAAG,SAAY,QAC3B,CAAE,OAAU,EAAG,SAAY,YAC3B,CAAE,OAAU,EAAG,SAAY,WAC3B,CAAE,OAAU,EAAG,SAAY,WAC3B,CAAE,OAAU,EAAG,SAAY,UAC3B,CAAE,OAAU,EAAG,SAAY,cA8BxBC,EAAgBC,IAAqBf,EAAAA,EAAAA,UAAS,MAI/CgB,EAAaH,EAAUI,KAAIC,IAAK,CAAKC,MAAOD,EAAME,SAAUC,MAAOH,EAAMI,WAC/E,OAEEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAClBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCC,SAAC,iCAClDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UACpBF,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CAACC,YAAY,eAAeC,QAASb,EAAYK,MAAOP,EAAgBgB,SAdzEhB,IACpBC,EAAkBD,EAAe,EAaoFiB,iBAAkBA,IAAM,sBAAuBC,aAAa,EAAMC,cAAe,IAAKT,UAAU,qBAEzMD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UACpBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,eAAeU,KAAK,OAAOC,GAAG,WAAWC,OAAO,YAEnEb,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UACpBF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,kBAAiBC,SAAC,0BAUtD,C","sources":["components/Readers/Readers.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport React, { Component, useEffect, useState } from 'react'\r\nimport Select from 'react-select';\r\nimport { Async } from 'react-select';\r\n\r\nfunction Readers() {\r\n\r\n  const options = [\r\n    { value: 'AL', label: 'Alabama' },\r\n    { value: 'AK', label: 'Alaska' },\r\n    { value: 'AS', label: 'American Samoa' },\r\n    { value: 'AZ', label: 'Arizona' },\r\n    { value: 'AR', label: 'Arkansas' },\r\n    { value: 'CA', label: 'California' },\r\n    { value: 'CO', label: 'Colorado' },\r\n    { value: 'CT', label: 'Connecticut' },\r\n    { value: 'DE', label: 'Delaware' },\r\n    { value: 'DC', label: 'District Of Columbia' },\r\n    { value: 'FM', label: 'Federated States Of Micronesia' },\r\n    { value: 'FL', label: 'Florida' },\r\n    { value: 'GA', label: 'Georgia' },\r\n    { value: 'GU', label: 'Guam' },\r\n    { value: 'HI', label: 'Hawaii' },\r\n    { value: 'ID', label: 'Idaho' },\r\n    { value: 'IL', label: 'Illinois' },\r\n    { value: 'IN', label: 'Indiana' },\r\n    { value: 'IA', label: 'Iowa' },\r\n    { value: 'KS', label: 'Kansas' },\r\n    { value: 'KY', label: 'Kentucky' },\r\n    { value: 'LA', label: 'Louisiana' },\r\n    { value: 'ME', label: 'Maine' },\r\n    { value: 'MH', label: 'Marshall Islands' },\r\n    { value: 'MD', label: 'Maryland' },\r\n    { value: 'MA', label: 'Massachusetts' },\r\n    { value: 'MI', label: 'Michigan' },\r\n    { value: 'MN', label: 'Minnesota' },\r\n    { value: 'MS', label: 'Mississippi' },\r\n    { value: 'MO', label: 'Missouri' },\r\n    { value: 'MT', label: 'Montana' },\r\n    { value: 'NE', label: 'Nebraska' },\r\n    { value: 'NV', label: 'Nevada' },\r\n    { value: 'NH', label: 'New Hampshire' },\r\n    { value: 'NJ', label: 'New Jersey' },\r\n    { value: 'NM', label: 'New Mexico' },\r\n    { value: 'NY', label: 'New York' },\r\n    { value: 'NC', label: 'North Carolina' },\r\n    { value: 'ND', label: 'North Dakota' },\r\n    { value: 'MP', label: 'Northern Mariana Islands' },\r\n    { value: 'OH', label: 'Ohio' },\r\n    { value: 'OK', label: 'Oklahoma' },\r\n    { value: 'OR', label: 'Oregon' },\r\n    { value: 'PW', label: 'Palau' },\r\n    { value: 'PA', label: 'Pennsylvania' },\r\n    { value: 'PR', label: 'Puerto Rico' },\r\n    { value: 'RI', label: 'Rhode Island' },\r\n    { value: 'SC', label: 'South Carolina' },\r\n    { value: 'SD', label: 'South Dakota' },\r\n    { value: 'TN', label: 'Tennessee' },\r\n    { value: 'TX', label: 'Texas' },\r\n    { value: 'UT', label: 'Utah' },\r\n    { value: 'VT', label: 'Vermont' },\r\n    { value: 'VI', label: 'Virgin Islands' },\r\n    { value: 'VA', label: 'Virginia' },\r\n    { value: 'WA', label: 'Washington' },\r\n    { value: 'WV', label: 'West Virginia' },\r\n    { value: 'WI', label: 'Wisconsin' },\r\n    { value: 'WY', label: 'Wyoming' },\r\n  ];\r\n  const GetSchemadata = {\r\n    \"GetFiletype\": [\r\n      { \"ListID\": 1, \"Filetype\": \"Switch\" },\r\n      { \"ListID\": 2, \"Filetype\": \"Host\" },\r\n      { \"ListID\": 3, \"Filetype\": \"Starting\" },\r\n      { \"ListID\": 4, \"Filetype\": \"Keyword\" },\r\n      { \"ListID\": 5, \"Filetype\": \"Feature\" },\r\n      { \"ListID\": 6, \"Filetype\": \"Should\" },\r\n      { \"ListID\": 7, \"Filetype\": \"Assigned\" }\r\n    ]\r\n  };\r\n  \r\n\r\n  const api_url = \"https://localhost:7130/GetFileType\";\r\n \r\n\r\nconst [data, setData] = useState(null);\r\nconst [loading, setLoading] = useState(true);\r\nconst [error, setError] = useState(null);\r\n\r\nuseEffect(() => {\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(api_url);\r\n      console.log(\"Actual Data \"+response.data);\r\n      setData(response.data);\r\n    } catch (error) {\r\n      setError(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  fetchData();\r\n}, []); // Empty dependency array ensures that this effect runs once, similar to componentDidMount\r\n\r\n  const filetypes = GetSchemadata.GetFiletype;\r\n\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const handleChange = (selectedOption) => {\r\n    setSelectedOption(selectedOption);\r\n  }\r\n  const OptionData = filetypes.map(items =>({label: items.Filetype, value: items.ListID}));\r\n  return (\r\n\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"card mt-3\">\r\n            <h5 className=\"card-header bg-success text-white\">Upload File DynamicFileType</h5>\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                  <Select placeholder=\"Select Files\" options={OptionData} value={selectedOption} onChange={handleChange} noOptionsMessage={() => 'No Categories Found'} isClearable={true} maxMenuHeight={200} className=\"custom-select\"/>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <input className=\"form-control\" type=\"file\" id=\"formFile\" accept=\".txt\" />\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <button className='btn btn-success'>Upload</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Readers"],"names":["data","setData","useState","loading","setLoading","error","setError","useEffect","async","response","axios","get","console","log","fetchData","filetypes","selectedOption","setSelectedOption","OptionData","map","items","label","Filetype","value","ListID","_jsx","className","children","_jsxs","Select","placeholder","options","onChange","noOptionsMessage","isClearable","maxMenuHeight","type","id","accept"],"sourceRoot":""}